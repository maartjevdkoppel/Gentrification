employ_2005   <- employ_2005   %>% rename(`bc-code` = `brtk2015`) # Rename BC code variable for later merging
employ_2009   <- employ_2009   %>% rename(`bc-code` = `brtk2015`)
employ_2013   <- employ_2013   %>% rename(`bc-code` = `brtk2015`)
income2005    <- income2005    %>% rename(`bc-code` = `brtk2015`)
income2009    <- income2009    %>% rename(`bc-code` = `brtk2015`)
income2013    <- income2013    %>% rename(`bc-code` = `brtk2015`)
buildings2005 <- buildings2005 %>% rename(`bc-code` = `brtk2015`)
buildings2009 <- buildings2009 %>% rename(`bc-code` = `brtk2015`)
corp2005      <- corp2005 %>% rename(`bc-code` = `brtk2015`)
corp2009      <- corp2009 %>% rename(`bc-code` = `brtk2015`)
corp2013      <- corp2013 %>% rename(`bc-code` = `brtk2015`)
employ_2005   <- employ_2005   %>% select(c(`bc-code`, employ)) # Drop 2005 & 2010 BC code, are now redundant
employ_2009   <- employ_2009   %>% select(c(`bc-code`, employ))
employ_2013   <- employ_2013   %>% select(c(`bc-code`, employ))
income2005    <- income2005    %>% select(c(`bc-code`, net_std_income_household, households))
income2009    <- income2009    %>% select(c(`bc-code`, net_std_income_household, households))
income2013    <- income2013    %>% select(c(`bc-code`, net_std_income_household, households))
buildings2005 <- buildings2005 %>% select(c(`bc-code`, builtafter2000))
buildings2009 <- buildings2009 %>% select(c(`bc-code`, builtafter2000))
corp2005      <- corp2005      %>% select(c(`bc-code`, corp_housing, woningvoorraad))
corp2009      <- corp2009      %>% select(c(`bc-code`, corp_housing, woningvoorraad))
corp2013      <- corp2013      %>% select(c(`bc-code`, corp_housing, woningvoorraad))
# Find duplicates in BC codes
n_occur <- data.frame(table(employ_2005$`bc-code`)) # In all datasets, there are 2 neighbourhoods with BC = K47 (later to be merged)
n_occur[n_occur$Freq > 1,]
n_occur <- data.frame(table(employ_2009$`bc-code`))
n_occur[n_occur$Freq > 1,]
n_occur <- data.frame(table(employ_2013$`bc-code`))
n_occur[n_occur$Freq > 1,]
n_occur <- data.frame(table(income2005$`bc-code`))
n_occur[n_occur$Freq > 1,]
n_occur <- data.frame(table(income2009$`bc-code`))
n_occur[n_occur$Freq > 1,]
n_occur <- data.frame(table(income2013$`bc-code`))
n_occur[n_occur$Freq > 1,]
n_occur <- data.frame(table(buildings2005$`bc-code`))
n_occur[n_occur$Freq > 1,]
n_occur <- data.frame(table(buildings2009$`bc-code`))
n_occur[n_occur$Freq > 1,]
n_occur <- data.frame(table(corp2005$`bc-code`))
n_occur[n_occur$Freq > 1,]
n_occur <- data.frame(table(corp2009$`bc-code`))
n_occur[n_occur$Freq > 1,]
n_occur <- data.frame(table(corp2013$`bc-code`))
n_occur[n_occur$Freq > 1,]
# Make net income per household: 'netto wijk product' (net_std_income_household * households)
# This is needed for later aggregations
income2005$net_wijk_product <- income2005$net_std_income_household * income2005$households
income2009$net_wijk_product <- income2009$net_std_income_household * income2009$households
income2013$net_wijk_product <- income2013$net_std_income_household * income2013$households
income2017$net_wijk_product <- income2017$net_std_income_household * income2017$households
# Drop net_std_income_household, we now have the variable hat is absolute and apt for aggregation
income2005 <- income2005 %>% select(c(`bc-code`, net_wijk_product, households))
income2009 <- income2009 %>% select(c(`bc-code`, net_wijk_product, households))
income2013 <- income2013 %>% select(c(`bc-code`, net_wijk_product, households))
income2017 <- income2017 %>% select(c(`bc-code`, net_wijk_product, households))
# Aggregate: as K47 represents two neighbourhoods (later to be merged), these rows need to be aggregated
employ_2005   <- aggregate(employ_2005$employ,   by=list(employ_2005$`bc-code`),   FUN = sum) # simple sum suffices bc absolute numbers
employ_2009   <- aggregate(employ_2009$employ,   by=list(employ_2009$`bc-code`),   FUN = sum)
employ_2013   <- aggregate(employ_2013$employ,   by=list(employ_2013$`bc-code`),   FUN = sum)
buildings2005 <- aggregate(buildings2005$builtafter2000, by=list(buildings2005$`bc-code`), FUN = sum)
buildings2009 <- aggregate(buildings2009$builtafter2000, by=list(buildings2009$`bc-code`), FUN = sum)
income2005    <- aggregate(income2005[,2:3], by=list(income2005$`bc-code`), FUN = sum)
income2009    <- aggregate(income2009[,2:3], by=list(income2009$`bc-code`), FUN = sum)
income2013    <- aggregate(income2013[,2:3], by=list(income2013$`bc-code`), FUN = sum)
corp2005      <- aggregate(corp2005[,2:3], by=list(corp2005$`bc-code`), FUN = sum)
corp2009      <- aggregate(corp2009[,2:3], by=list(corp2009$`bc-code`), FUN = sum)
corp2013      <- aggregate(corp2013[,2:3], by=list(corp2013$`bc-code`), FUN = sum)
# Rename columns in aggregated data
employ_2005   <- employ_2005   %>% rename(`bc-code` = Group.1) %>% rename(employ = x)
employ_2009   <- employ_2009   %>% rename(`bc-code` = Group.1) %>% rename(employ = x)
employ_2013   <- employ_2013   %>% rename(`bc-code` = Group.1) %>% rename(employ = x)
buildings2005 <- buildings2005 %>% rename(`bc-code` = Group.1) %>% rename(builtafter2000 = x)
buildings2009 <- buildings2009 %>% rename(`bc-code` = Group.1) %>% rename(builtafter2000 = x)
income2005    <- income2005    %>% rename(`bc-code` = Group.1)
income2009    <- income2009    %>% rename(`bc-code` = Group.1)
income2013    <- income2013    %>% rename(`bc-code` = Group.1)
corp2005      <- corp2005      %>% rename(`bc-code` = Group.1)
corp2009      <- corp2009      %>% rename(`bc-code` = Group.1)
corp2013      <- corp2013      %>% rename(`bc-code` = Group.1)
# HOUSINGDATA
# Remove empty rows from housingdata_1317
housingdata_1317 <- housingdata_1317[complete.cases(housingdata_1317),]
# Create bc_code variable for merging
housingdata_0509$bc_code <- substr(housingdata_0509$`naam bc/std`, 1, 3) # extract BC code
housingdata_1317$bc_code <- substr(housingdata_1317$`indeling buurtcombinaties 2015 1)`, 1, 3) # extract BC code
# Subset to relevant years: 2005, 2009, 2013 and 2017
housingdata_0509 <- select(housingdata_0509, c(bc_code, `2005`, `2009`))
housingdata_1317 <- select(housingdata_1317, c(bc_code, `2013`, `2017`))
# Convert to long data, needed to merge with 'buurtdata'
housingdata_0509 <- pivot_longer(housingdata_0509, cols = `2005`:`2009`, names_to = "jaar", values_to = "WVOORRBAG")
housingdata_1317 <- pivot_longer(housingdata_1317, cols = `2013`:`2017`, names_to = "jaar", values_to = "WVOORRBAG")
# Combine the two datasets
housingdata <- rbind(housingdata_0509, housingdata_1317)
# Set WVOORRBAG to numeric
housingdata$WVOORRBAG <- as.numeric(housingdata$WVOORRBAG)
# BUURTDATA
# Subset to neighbourhood-level data only ('Wijken')
unique(buurtdata$niveaunaam)
buurtdata <- buurtdata %>% filter(buurtdata$niveaunaam == "Wijken")
# Select relevant variables - drop all others
independentvars <- c("gebiedcode15", "gebiednaam", "jaar", "BEVTOTAAL", "BEVSUR", "BEVANTIL",
"BEVTURK", "BEVMAROK", "BEVOVNW", "BEVWEST",
"BEVAUTOCH", "BEV0_18", "BEV18_26", "BEV27_65",
"BEV66PLUS", "BEVOPLLAAG_P", "BEVOPLMID_P",
"BEVOPLHOOG_P", "BEV15_19", "BEV20_24", "BEV25_29",
"BEV30_34", "BEV35_39", "BEV40_44", "BEV45_49",
"BEV50_54", "BEV55_59", "BEV60_64", "BEV65_69",
"BEV70_74", "PREGWERKL", "BEVPOTBBV15_65", "BEVPOTBBV15_64", "WHUURTSLG_P", "WCORHUUR")
buurtdata <- buurtdata[independentvars]
# NOTE: Unemployment information is unavailable for 2005 and 2009 (from 2010 onwards).
# NOTE: Education information is unavailable for 2006.
# Merge housing stock data into 'buurtdata'
buurtdata <- buurtdata %>% rename(bc_code = gebiedcode15) # rename merge variable
buurtdata <- merge(buurtdata, housingdata, by=c("bc_code", "jaar"), all = TRUE)
# Create variable for percentage of population aged 15-74
# This variable is needed to convert the education variables from relative to absolute numbers,
# which is necessary when buurtcombinatie observations are combined (only those observations with N/A)
buurtdata$BEV15_74 <- (buurtdata$BEV15_19 + buurtdata$BEV20_24 + buurtdata$BEV25_29 + buurtdata$BEV30_34 +
buurtdata$BEV35_39 + buurtdata$BEV40_44 + buurtdata$BEV45_49 + buurtdata$BEV50_54 +
buurtdata$BEV55_59 + buurtdata$BEV60_64 + buurtdata$BEV65_69 + buurtdata$BEV70_74)
# Transform relative education variables into absolute variables
buurtdata$BEVOPLLAAG <- (buurtdata$BEVOPLLAAG_P * buurtdata$BEV15_74) / 100
buurtdata$BEVOPLMID  <- (buurtdata$BEVOPLMID_P  * buurtdata$BEV15_74) / 100
buurtdata$BEVOPLHOOG <- (buurtdata$BEVOPLHOOG_P * buurtdata$BEV15_74) / 100
# Transform relative social housing variables into absolute variables
buurtdata$WHUURTSLG <- (buurtdata$WHUURTSLG_P * buurtdata$WVOORRBAG) / 100
# Drop relative variables
buurtdata = subset(buurtdata, select = -c(BEVOPLLAAG_P, BEVOPLMID_P, BEVOPLHOOG_P, WHUURTSLG_P))
# Rename _ with -, because we later want there to only be one underscore
names(buurtdata) <- str_replace(names(buurtdata), "_", "-")
# Create different data frames for relevant years
buurtdata2005 <- buurtdata %>% filter(buurtdata$jaar == 2005)
buurtdata2009 <- buurtdata %>% filter(buurtdata$jaar == 2009)
buurtdata2013 <- buurtdata %>% filter(buurtdata$jaar == 2013)
buurtdata2017 <- buurtdata %>% filter(buurtdata$jaar == 2017)
# Add employment data to buurtdata
buurtdata2005 <- merge(buurtdata2005, employ_2005, by="bc-code", all=TRUE)
buurtdata2009 <- merge(buurtdata2009, employ_2009, by="bc-code", all=TRUE)
buurtdata2013 <- merge(buurtdata2013, employ_2013, by="bc-code", all=TRUE)
buurtdata2017 <- merge(buurtdata2017, employ_2017, by="bc-code", all=TRUE)
## LET OP: buurten die er dubbel inzitten verdubbelen zich hier -- lijkt hier nog alleen K47
## Bij verder mergen worden het er steeds meer.
## Wat hieraan te doen? Met aggregeren van buurten niet opgelost, telt dan te veel opt
## Mogelijk is ook specifiek K47+K50 anders omdat er niet NAs staan, maar veel data
## Maar lijkt ook bij andere buurten niet goed te gaan.
# Add income data to buurtdata
buurtdata2005 <- merge(buurtdata2005, income2005, by="bc-code", all=TRUE)
buurtdata2009 <- merge(buurtdata2009, income2009, by="bc-code", all=TRUE)
buurtdata2013 <- merge(buurtdata2013, income2013, by="bc-code", all=TRUE)
buurtdata2017 <- merge(buurtdata2017, income2017, by="bc-code", all=TRUE)
# Add buildings data to buurtdata
buurtdata2005 <- merge(buurtdata2005, buildings2005, by="bc-code", all=TRUE)
buurtdata2009 <- merge(buurtdata2009, buildings2009, by="bc-code", all=TRUE)
buurtdata2013 <- merge(buurtdata2013, buildings2013, by="bc-code", all=TRUE)
buurtdata2017 <- merge(buurtdata2017, buildings2013, by="bc-code", all=TRUE)
# Add corporation data to buurtdata
buurtdata2005 <- merge(buurtdata2005, corp2005, by="bc-code", all=TRUE)
buurtdata2009 <- merge(buurtdata2009, corp2009, by="bc-code", all=TRUE)
buurtdata2013 <- merge(buurtdata2013, corp2013, by="bc-code", all=TRUE)
buurtdata2017 <- merge(buurtdata2017, corp2017, by="bc-code", all=TRUE)
# Add years to all variable names
names(buurtdata2005) <- paste0(names(buurtdata2005), "_2005")
names(buurtdata2009) <- paste0(names(buurtdata2009), "_2009")
names(buurtdata2013) <- paste0(names(buurtdata2013), "_2013")
names(buurtdata2017) <- paste0(names(buurtdata2017), "_2017")
# NEIGHBOURHOOD + VOTE SHARES - Merging data ---------------------------------------------------------------------------
# Rename merge variables
subdata       <- subdata       %>% rename(bc_code = bc_code_2018)
buurtdata2005 <- buurtdata2005 %>% rename(bc_code = `bc-code_2005`)
buurtdata2009 <- buurtdata2009 %>% rename(bc_code = `bc-code_2009`)
buurtdata2013 <- buurtdata2013 %>% rename(bc_code = `bc-code_2013`)
buurtdata2017 <- buurtdata2017 %>% rename(bc_code = `bc-code_2017`)
# Merge vote share data + neighbourhood data
subdata_buurt <- merge(subdata,       buurtdata2005, by="bc_code", all=TRUE)
subdata_buurt <- merge(subdata_buurt, buurtdata2009, by="bc_code", all=TRUE)
subdata_buurt <- merge(subdata_buurt, buurtdata2013, by="bc_code", all=TRUE)
subdata_buurt <- merge(subdata_buurt, buurtdata2017, by="bc_code", all=TRUE)
# NEIGHBOURHOOD + VOTE SHARES - Merging neighbourhoods ------------------------------------------------------------------
# Back-up data
subdata_buurt_backup <- subdata_buurt
subdata_buurt <- subdata_buurt_backup
# Drop redundant variables: jaar, gebiednaam & 2006-2014 BC codes
subdata_buurt = subset(subdata_buurt, select = -c(jaar_2005, gebiednaam_2005, jaar_2009, gebiednaam_2009, jaar_2013,
gebiednaam_2013, jaar_2017, gebiednaam_2017, bc_2006, bc_2010, bc_2014))
# Replace missings with empty string for bc_code and bc_naam
subdata_buurt$bc_code <- ifelse(is.na(subdata_buurt$bc_code), "", subdata_buurt$bc_code)
subdata_buurt$bc_naam <- ifelse(is.na(subdata_buurt$bc_naam), "", subdata_buurt$bc_naam)
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------
# Create dummy variable: indicate whether neighbourhood was created through combination of others (by hand, see below)
subdata_buurt$BCcombined <- 0
# Rename all neighbourhoods to be merged
# Specify renaming function
rename.bc <- function(x, condition, code, name, combined = FALSE){
x$bc_code <- ifelse(condition, code, x$bc_code) # change BC code
x$bc_naam <- ifelse(condition, name, x$bc_naam) # change BC name
if(combined){x$BCcombined <- ifelse(condition, 1, x$BCcombined)}
x
}
# De Krommert: Chassébuurt + Geuzenbuurt
condition     <- subdata_buurt$bc_naam == "De Krommert" | subdata_buurt$bc_naam == "Chassébuurt" | subdata_buurt$bc_naam == "Geuzenbuurt"
subdata_buurt <- rename.bc(subdata_buurt, condition, "E40+E75", "De Krommert: Chassébuurt + Geuzenbuurt", TRUE)
# Diamantbuurt/Zuid Pijp
condition     <- subdata_buurt$bc_naam == "Diamantbuurt" | subdata_buurt$bc_naam == "Zuid Pijp"
subdata_buurt <- rename.bc(subdata_buurt, condition, "K26", "Diamantbuurt/Zuid Pijp")
# Museumkwartier + Duivelseiland
## LET OP: subdata_buurt$bc_code == "K47" toegevoegd in poging probleem op te lossen
condition     <- subdata_buurt$bc_naam == "Duivelseiland" | subdata_buurt$bc_naam == "Museumkwartier" | subdata_buurt$bc_naam == "Museumkwartier + Duivelseiland" | subdata_buurt$bc_code == "K50" | subdata_buurt$bc_code == "K47"
subdata_buurt <- rename.bc(subdata_buurt, condition, "K47+K50", "Museumkwartier + Duivelseiland", TRUE)
# Buikslotermeer + Elzenhagen
condition     <- subdata_buurt$bc_naam == "Elzenhagen" | subdata_buurt$bc_naam == "Buikslotermeer"
subdata_buurt <- rename.bc(subdata_buurt, condition, "N69+N74", "Buikslotermeer + Elzenhagen", TRUE)
# Frankendael + De Omval/Overamstel
condition     <- subdata_buurt$bc_naam == "Frankendael" | subdata_buurt$bc_naam == "Frankendael + De Omval" | subdata_buurt$bc_naam == "De Omval" | subdata_buurt$bc_naam == "Omval/Overamstel"
subdata_buurt <- rename.bc(subdata_buurt, condition, "M55+M58", "Frankendael + De Omval/Overamstel", TRUE)
# IJburg West + Zeeburgereiland/Nieuwe Diep + Indische Buurt Oost
condition     <- subdata_buurt$bc_naam == "IJburg West" | subdata_buurt$bc_naam == "IJburg West + Zeeburgereiland/Nieuwe Diep" | subdata_buurt$bc_naam == "Indische Buurt Oost" | subdata_buurt$bc_naam == "Indische Buurt Oost + Zeeburgereiland/Nieuwe Diep" | subdata_buurt$bc_naam == "Zeeburgereiland/Nieuwe Diep"
subdata_buurt <- rename.bc(subdata_buurt, condition, "M32+M34+M35", "IJburg West + Zeeburgereiland/Nieuwe Diep + Indische Buurt Oost", TRUE)
# IJplein/Vogelbuurt + Nieuwendammerham/Noordelijke IJ-oevers Oost
condition     <- subdata_buurt$bc_naam == "IJplein/Vogelbuurt + Nieuwendammerham" | subdata_buurt$bc_naam == "IJplein/Vogelbuurt + Noordelijke IJ-oevers Oost" | subdata_buurt$bc_code == "N61" | subdata_buurt$bc_code == "N72"
subdata_buurt <- rename.bc(subdata_buurt, condition, "N61+N72", "IJplein/Vogelbuurt + Nieuwendammerham/Noordelijke IJ-oevers Oost", TRUE)
# Middelveldsche Akerpolder/Sloten
condition     <- subdata_buurt$bc_naam == "Middelveldsche Akerpolder" | subdata_buurt$bc_naam == "Middelveldsche Akerpolder/Sloten"
subdata_buurt <- rename.bc(subdata_buurt, condition, "F84", "Middelveldsche Akerpolder/Sloten")
# Nieuwendam-Noord/Waterlandpleinbuurt
condition     <- subdata_buurt$bc_naam == "Nieuwendam-Noord" | subdata_buurt$bc_naam == "Waterlandpleinbuurt"
subdata_buurt <- rename.bc(subdata_buurt, condition, "N68", "Nieuwendam-Noord/Waterlandpleinbuurt")
# Prinses Irenebuurt e.o./Station Zuid/WTC e.o.
condition     <- subdata_buurt$bc_naam == "Prinses Irenebuurt e.o." | subdata_buurt$bc_naam == "Station Zuid/WTC e.o."
subdata_buurt <- rename.bc(subdata_buurt, condition, "K59", "Prinses Irenebuurt e.o./Station Zuid/WTC e.o.")
# Slotermeer-Noordoost + Spieringhorn + Westelijk Havengebied + Bedrijventerrein Sloterdijk
condition     <- subdata_buurt$bc_naam == "Slotermeer-Noordoost" | subdata_buurt$bc_naam == "Slotermeer-Noordoost + Spieringhorn" | subdata_buurt$bc_naam == "Westelijk Havengebied + Bedrijventerrein Sloterdijk" | subdata_buurt$bc_code == "B10" | subdata_buurt$bc_code == "F11" | subdata_buurt$bc_code == "B11" | subdata_buurt$bc_code == "F75"
subdata_buurt <- rename.bc(subdata_buurt, condition, "F76+F75+B10+F11", "Slotermeer-Noordoost + Spieringhorn + Westelijk Havengebied + Bedrijventerrein Sloterdijk", TRUE)
# Slotervaart: Slotervaart Noord + Slotervaart Zuid
condition     <- subdata_buurt$bc_naam == "Slotervaart" | subdata_buurt$bc_naam == "Slotervaart Noord" | subdata_buurt$bc_naam == "Slotervaart Zuid"
subdata_buurt <- rename.bc(subdata_buurt, condition, "F85+F89", "Slotervaart: Slotervaart Noord + Slotervaart Zuid", TRUE)
# Volewijck + Buiksloterham/Volewijck + Noordelijke IJ-oevers West
condition     <- subdata_buurt$bc_naam == "Volewijck + Buiksloterham" | subdata_buurt$bc_naam == "Volewijck + Noordelijke IJ-oevers West" | subdata_buurt$bc_code == "N60" | subdata_buurt$bc_code == "N71"
subdata_buurt <- rename.bc(subdata_buurt, condition, "N60+N71", "Volewijck + Buiksloterham/Volewijck + Noordelijke IJ-oevers West", TRUE)
# Following neighbourhoods were consistent in vote share data, but failed to merge with the neighbourhood characteristics data (e.g. not in neighbourhood data as a combined code)
# Spaarndammer- en Zeeheldenbuurt + Houthavens
condition     <- subdata_buurt$bc_code == "E12" | subdata_buurt$bc_code == "E13" | subdata_buurt$bc_code == "E13+E12"
subdata_buurt <- rename.bc(subdata_buurt, condition, "E13+12", "Spaarndammer- en Zeeheldenbuurt + Houthavens")
# Landlust + Sloterdijk
condition     <- subdata_buurt$bc_code == "E36" | subdata_buurt$bc_code == "E37" | subdata_buurt$bc_code == "E37+E36"
subdata_buurt <- rename.bc(subdata_buurt, condition, "E37+E36", "Landlust + Sloterdijk")
# Tuindorp Buiksloot + Nieuwendammerdijk/Buiksloterdijk
condition     <- subdata_buurt$bc_code == "N63+N64" | subdata_buurt$bc_code == "N63" | subdata_buurt$bc_code == "N64"
subdata_buurt <- rename.bc(subdata_buurt, condition, "N63+N64", "Tuindorp Buiksloot + Nieuwendammerdijk/Buiksloterdijk")
# Holendrecht/Reigersbos + Amstel III/Bullewijk
condition     <- subdata_buurt$bc_code == "T96+T92" | subdata_buurt$bc_code == "T96" | subdata_buurt$bc_code == "T92"
subdata_buurt <- rename.bc(subdata_buurt, condition, "T96+T92", "Holendrecht/Reigersbos + Amstel III/Bullewijk")
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------
# Drop neighbourhoods
# 'M50' (and its old code M74) is not present in the voting data, 'Z99' and 'X99' are false codes or non-existent neighbourhood
# 'K23' ('Zuidas') is dropped as it was newly created in 2018 from 4 constitutive parts (K59, K52, K90 and K91) which also continue to exist
subdata_buurt <- subdata_buurt[subdata_buurt$bc_code != "M50" & subdata_buurt$bc_code != "M74" & subdata_buurt$bc_code != "Z99" & subdata_buurt$bc_code != "K23" & subdata_buurt$bc_code != "X99",]
# New back-up of data
subdata_buurt_backup2 <- subdata_buurt
subdata_buurt <- subdata_buurt_backup2
# Aggregate all neighbourhoods to be merged
# Aggregate function cannot deal with NA -- use 999999 as placeholder for 0 to retain NAs in merged data
iszero <- function(x) {x== 0}
placeholder <- 999999 # make 999999 constant
subdata_buurt[iszero(subdata_buurt)] <- placeholder # set 0 to 999999
subdata_buurt[is.na(subdata_buurt)] <- 0 # set missing to 0
subdata_buurt <- aggregate(subdata_buurt[,-c(1:2)], by=list(bc_code=subdata_buurt$bc_code, bc_naam=subdata_buurt$bc_naam), FUN=sum) # aggregate data with sum
subdata_buurt[iszero(subdata_buurt)] <- NA # set 0 to missing
subdata_buurt[,-c(1:2)] <- subdata_buurt[,-c(1:2)] %% placeholder # all modulo 999999
# Dummify BCcombined again, since 'aggregate' summed observations and it no longer 0 or 1 for all
subdata_buurt$BCcombined <- ifelse(subdata_buurt$BCcombined != 0, 1, 0)
# Clone BCcombined so there are separate variables for 2005, 2009, 2013 and 2017: needed for restructuring to long data
subdata_buurt$BCcombined_2009 <- subdata_buurt$BCcombined
subdata_buurt$BCcombined_2013 <- subdata_buurt$BCcombined
subdata_buurt$BCcombined_2017 <- subdata_buurt$BCcombined
subdata_buurt <- subdata_buurt %>% rename(BCcombined_2005 = BCcombined)
# COMPLETE DATASET - Percentage variables ----------------------------------------------------------------
# Make relative unemployment variable: share of WWB receivers in the working-age population (15-64)
subdata_buurt$WWB_2005 <- (subdata_buurt$employ_2005 / subdata_buurt$`BEVPOTBBV15-64_2005`) * 100
subdata_buurt$WWB_2009 <- (subdata_buurt$employ_2009 / subdata_buurt$`BEVPOTBBV15-64_2009`) * 100
subdata_buurt$WWB_2013 <- (subdata_buurt$employ_2013 / subdata_buurt$`BEVPOTBBV15-64_2013`) * 100
subdata_buurt$WWB_2017 <- (subdata_buurt$employ_2017 / subdata_buurt$`BEVPOTBBV15-64_2017`) * 100
# Restandardise: turn net_wijk_product back into net income per household
subdata_buurt$netHHincome_2005 <- (subdata_buurt$net_wijk_product_2005 / subdata_buurt$households_2005)
subdata_buurt$netHHincome_2009 <- (subdata_buurt$net_wijk_product_2009 / subdata_buurt$households_2009)
subdata_buurt$netHHincome_2013 <- (subdata_buurt$net_wijk_product_2013 / subdata_buurt$households_2013)
subdata_buurt$netHHincome_2017 <- (subdata_buurt$net_wijk_product_2017 / subdata_buurt$households_2017)
View(subdata_buurt)
subdata_buurt[,c(169,180)]
subdata_buurt[,c(170,181)]
# Clean environment
rm(list=ls())
# TO DO: elect only libraries used
library(raster)
library(foreign)
library(tidyverse)
library(ggplot2)
library(readxl)
library(dplyr)
library(stats)
library(tidyr)
library(expss)
# Import data -------------------------------------------------------------------------------------------------------
# Read data
fulldata <- readRDS("/Users/Maartje/Desktop/gentrification_data_long_revised.rds")
# Prepare data for analysis -----------------------------------------------------------------------------------------
# Subset to 2018 only
subdata <- fulldata[ which(fulldata$year=='2018'), ]
# Redefine categories for migration background
# Turkish, Moroccan, Surinamese & Antillean vs. other migration vs. no migration background
subdata$imm_TMSA  <- subdata$imm_Tur + subdata$imm_Mar + subdata$imm_Sur + subdata$imm_Ant
subdata$imm_other <- subdata$imm_otherNW + subdata$imm_W
var_lab(subdata$imm_TMSA)  = "% Turkish, Moroccan, Surinamese or Antillean migration background"
var_lab(subdata$imm_other) = "% Other migration background"
# Check for missing data
varlist <- list('PVDA', 'DENK', 'BIJ1', 'imm_Sur', 'imm_Ant', 'imm_Tur', 'imm_Mar', 'imm_otherNW', 'imm_W',
'age_18t26', 'age_66plus', 'edu_low', 'edu_high', 'housing_soc', 'housing_pub', 'unempl', 'netHHincome',
'MCparties', 'turnout', 'netincome_delta2005', 'netincome_delta2009', 'netincome_delta2013',
'housing_soc_delta2005','housing_soc_delta2009', 'housing_soc_delta2013', 'housing_pub_delta2005',
'housing_pub_delta2009', 'housing_pub_delta2013', 'imm_TMSA', 'imm_other')
for (n in varlist){print(n)
print(summary(subdata[,n]))}
# only substantive number of missings for the '% social housing' variable
# 2017:       13 NAs
# ∆2005-2017: 21 NAs
# ∆2009-2017: 18 NAs
# ∆2013-2017: 17 NAs
# due to dependency on survey data for these numbers;
# need at least 50 respondents in a neighbourhood
t.test(housing_pub_delta2005 ~ bc_combined, data = subdata, alternative = "two.sided")
t.test(housing_pub_delta2009 ~ bc_combined, data = subdata, alternative = "two.sided")
t.test(housing_pub_delta2013 ~ bc_combined, data = subdata, alternative = "two.sided")
install.packages("mctest")
library(mctest)
View(subdata)
data.pvda.op1 <- select(subdata, c(PVDA, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2013, netincome_delta2013))
View(data.pvda.op1)
data.pvda.op1 <- data_op1[complete.cases(data_op1),]
data.pvda.op1 <- data.pvda.op1[complete.cases(data.pvda.op1),]
# PVDA option 2: gentrification over 8 years
data.pvda.op2 <- select(subdata, c(PVDA, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2009, netincome_delta2009))
data.pvda.op2 <- data.pvda.op2[complete.cases(data.pvda.op2),] # 1 observation deleted
data.pvda.op3 <- select(subdata, c(PVDA, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2005, netincome_delta2005))
data.pvda.op3 <- data.pvda.op3[complete.cases(data.pvda.op3),] # 1 observation deleted
data.mc.op1 <- select(subdata, c(MCparties, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2013, netincome_delta2013))
data.mc.op1 <- data.mc.op1[complete.cases(data.mc.op1),] # 1 observation deleted
data.mc.op2 <- select(subdata, c(MCparties, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2009, netincome_delta2009))
data.mc.op2 <- data.mc.op2[complete.cases(data.mc.op2),] # 1 observation deleted
# MC parties option 3: gentrification over 12 years
data.mc.op3 <- select(subdata, c(MCparties, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2005, netincome_delta2005))
data.mc.op3 <- data.mc.op3[complete.cases(data.mc.op3),] # 1 observation deleted
data.turn.op1 <- select(subdata, c(turnout, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2013, netincome_delta2013))
data.turn.op1 <- data.turn.op1[complete.cases(data.turn.op1),] # 1 observation deleted
data.turn.op2 <- select(subdata, c(turnout, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2009, netincome_delta2009))
data.turn.op2 <- data.turn.op2[complete.cases(data.turn.op2),] # 1 observation deleted
# Turnout option 3: gentrification over 12 years
data.turn.op3 <- select(subdata, c(turnout, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2005, netincome_delta2005))
data.turn.op3 <- data.turn.op3[complete.cases(data.turn.op3),] # 1 observation deleted
# PVDA option 1: gentrification over 4 years
data.pvda.op1 <- select(subdata, c(PVDA, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2013, netincome_delta2013))
data.pvda.op1 <- data.pvda.op1[complete.cases(data.pvda.op1),] # 1 observation deleted
# PVDA option 2: gentrification over 8 years
data.pvda.op2 <- select(subdata, c(bc_code, bc_naam, PVDA, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2009, netincome_delta2009))
data.pvda.op2 <- data.pvda.op2[complete.cases(data.pvda.op2),] # 1 observation deleted
# PVDA option 3: gentrification over 12 years
data.pvda.op3 <- select(subdata, c(bc_code, bc_naam, PVDA, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2005, netincome_delta2005))
data.pvda.op3 <- data.pvda.op3[complete.cases(data.pvda.op3),] # 2 observations deleted
# MC parties option 1: gentrification over 4 years
data.mc.op1 <- select(subdata, c(bc_code, bc_naam, MCparties, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2013, netincome_delta2013))
data.mc.op1 <- data.mc.op1[complete.cases(data.mc.op1),] # 1 observation deleted
# MC parties option 2: gentrification over 8 years
data.mc.op2 <- select(subdata, c(bc_code, bc_naam, MCparties, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2009, netincome_delta2009))
data.mc.op2 <- data.mc.op2[complete.cases(data.mc.op2),] # 1 observation deleted
# MC parties option 3: gentrification over 12 years
data.mc.op3 <- select(subdata, c(bc_code, bc_naam, MCparties, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2005, netincome_delta2005))
data.mc.op3 <- data.mc.op3[complete.cases(data.mc.op3),] # 2 observations deleted
# Turnout option 1: gentrification over 4 years
data.turn.op1 <- select(subdata, c(bc_code, bc_naam, turnout, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2013, netincome_delta2013))
data.turn.op1 <- data.turn.op1[complete.cases(data.turn.op1),] # 1 observation deleted
# Turnout option 2: gentrification over 8 years
data.turn.op2 <- select(subdata, c(bc_code, bc_naam, turnout, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2009, netincome_delta2009))
data.turn.op2 <- data.turn.op2[complete.cases(data.turn.op2),] # 1 observation deleted
# Turnout option 3: gentrification over 12 years
data.turn.op3 <- select(subdata, c(bc_code, bc_naam, turnout, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2005, netincome_delta2005))
data.turn.op3 <- data.turn.op3[complete.cases(data.turn.op3),] # 2 observations deleted
# PVDA option 1: gentrification over 4 years
data.pvda.op1 <- select(subdata, c(bc_code, bc_name, PVDA, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2013, netincome_delta2013))
data.pvda.op1 <- data.pvda.op1[complete.cases(data.pvda.op1),] # 1 observation deleted
# PVDA option 2: gentrification over 8 years
data.pvda.op2 <- select(subdata, c(bc_code, bc_name, PVDA, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2009, netincome_delta2009))
data.pvda.op2 <- data.pvda.op2[complete.cases(data.pvda.op2),] # 1 observation deleted
# PVDA option 3: gentrification over 12 years
data.pvda.op3 <- select(subdata, c(bc_code, bc_name, PVDA, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2005, netincome_delta2005))
data.pvda.op3 <- data.pvda.op3[complete.cases(data.pvda.op3),] # 2 observations deleted
# MC parties option 1: gentrification over 4 years
data.mc.op1 <- select(subdata, c(bc_code, bc_name, MCparties, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2013, netincome_delta2013))
data.mc.op1 <- data.mc.op1[complete.cases(data.mc.op1),] # 1 observation deleted
# MC parties option 2: gentrification over 8 years
data.mc.op2 <- select(subdata, c(bc_code, bc_name, MCparties, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2009, netincome_delta2009))
data.mc.op2 <- data.mc.op2[complete.cases(data.mc.op2),] # 1 observation deleted
# MC parties option 3: gentrification over 12 years
data.mc.op3 <- select(subdata, c(bc_code, bc_name, MCparties, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2005, netincome_delta2005))
data.mc.op3 <- data.mc.op3[complete.cases(data.mc.op3),] # 2 observations deleted
# Turnout option 1: gentrification over 4 years
data.turn.op1 <- select(subdata, c(bc_code, bc_name, turnout, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2013, netincome_delta2013))
data.turn.op1 <- data.turn.op1[complete.cases(data.turn.op1),] # 1 observation deleted
# Turnout option 2: gentrification over 8 years
data.turn.op2 <- select(subdata, c(bc_code, bc_name, turnout, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2009, netincome_delta2009))
data.turn.op2 <- data.turn.op2[complete.cases(data.turn.op2),] # 1 observation deleted
# Turnout option 3: gentrification over 12 years
data.turn.op3 <- select(subdata, c(bc_code, bc_name, turnout, housing_pub, netHHincome, imm_TMSA, imm_other,
edu_low, edu_high, age_18t26, age_66plus, unempl,
housing_pub_delta2005, netincome_delta2005))
data.turn.op3 <- data.turn.op3[complete.cases(data.turn.op3),] # 2 observations deleted
pvda.op1.m1 <- lm(PVDA ~ housing_pub + netHHincome
+ imm_TMSA + imm_other +
+ edu_low + edu_high + age_18t26 + age_66plus + unempl,
data = data.pvda.op1)
summary (pvda.op1.m1)
pvda.op1.m2 <- lm(PVDA ~ housing_pub + netHHincome
+ imm_TMSA + imm_other +
+ edu_low + edu_high + age_18t26 + age_66plus + unempl
+ housing_pub_delta2013 + netincome_delta2013,
data = data.pvda.op1)
summary (pvda.op1.m2)
# Model 1: composition effects
pvda.op2.m1 <- lm(PVDA ~ housing_pub + netHHincome
+ imm_TMSA + imm_other +
+ edu_low + edu_high + age_18t26 + age_66plus + unempl,
data = data.pvda.op2)
summary(pvda.op2.m1)
summary(pvda.op2.m2)
pvda.op2.m2 <- lm(PVDA ~ housing_pub + netHHincome
+ imm_TMSA + imm_other +
+ edu_low + edu_high + age_18t26 + age_66plus + unempl
+ housing_pub_delta2013 + netincome_delta2013,
data = data.pvda.op2)
summary(pvda.op2.m2)
pvda.op2.m2 <- lm(PVDA ~ housing_pub + netHHincome
+ imm_TMSA + imm_other +
+ edu_low + edu_high + age_18t26 + age_66plus + unempl
+ housing_pub_delta2013 + netincome_delta2013,
data = data.pvda.op2)
pvda.op2.m2 <- lm(PVDA ~ housing_pub + netHHincome
+ imm_TMSA + imm_other +
+ edu_low + edu_high + age_18t26 + age_66plus + unempl
+ housing_pub_delta2009 + netincome_delta2009,
data = data.pvda.op2)
summary(pvda.op2.m2)
pvda.op3.m1 <- lm(PVDA ~ housing_pub + netHHincome
+ imm_TMSA + imm_other +
+ edu_low + edu_high + age_18t26 + age_66plus + unempl,
data = data.pvda.op3)
summary(pvda.op3.m1)
pvda.op3.m2 <- lm(PVDA ~ housing_pub + netHHincome
+ imm_TMSA + imm_other +
+ edu_low + edu_high + age_18t26 + age_66plus + unempl
+ housing_pub_delta2005 + netincome_delta2005,
data = data.pvda.op3)
summary(pvda.op3.m2)
